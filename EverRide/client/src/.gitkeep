powershell
# quick-migrate.ps1
# Simple script to migrate Firebase project structure to EverRide structure
# Usage: .\quick-migrate.ps1

# Text formatting for console output
function Write-Green($text) { Write-Host $text -ForegroundColor Green }
function Write-Blue($text) { Write-Host $text -ForegroundColor Blue }
function Write-Yellow($text) { Write-Host $text -ForegroundColor Yellow }
function Write-Red($text) { Write-Host $text -ForegroundColor Red }

# Print header
Write-Blue "=========================================================="
Write-Blue "  EverRide Quick Migration Script"
Write-Blue "  Restructure Firebase project to EverRide format"
Write-Blue "=========================================================="
Write-Host ""

# Confirm with user
Write-Yellow "This script will restructure your project in the current directory."
Write-Yellow "Make sure you have committed all changes to Git before proceeding."
$confirmation = Read-Host "Do you want to continue? (y/n)"
if ($confirmation -ne 'y') {
    Write-Host "Migration cancelled. Exiting..."
    exit
}

# Create backup
$timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
$backupDir = "../project_backup_$timestamp"
Write-Host "Creating backup at: $backupDir"
Copy-Item -Path . -Destination $backupDir -Recurse -Force -Exclude "node_modules"
Write-Green "âœ“ Backup created"

# Step 1: Create new directory structure
Write-Blue "Step 1: Creating directory structure..."

$directories = @(
    "client/src/components/ui",
    "client/src/components/shifts",
    "client/src/components/core/charts",
    "client/src/components/trips",
    "client/src/components/expenses",
    "client/src/components/bookings",
    "client/src/contexts",
    "client/src/hooks",
    "client/src/pages",
    "client/src/lib",
    "client/src/styles",
    "client/src/stores",
    "server/functions",
    "server/dataconnect",
    "server/api",
    "public/icons"
)

foreach ($dir in $directories) {
    if (!(Test-Path $dir)) {
        New-Item -Path $dir -ItemType Directory -Force | Out-Null
        Write-Host "  Created: $dir"
    }
}
Write-Green "âœ“ Directory structure created"

Write-Green "âœ“ Migration completed!"
Write-Host ""
Write-Yellow "Next steps:"
Write-Host "1. Check for any missed files and move them manually"
Write-Host "2. Update import paths in your code"
Write-Host "3. Run 'npm install' to verify dependencies"
Write-Host "4. Test your application"
Write-Host ""
Write-Blue "Happy coding with your restructured EverRide project! ðŸš—ðŸ’¨"